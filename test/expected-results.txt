Running Omakase Tests ...
scanner/all-tokens.oma (1, 1): identifier
scanner/all-tokens.oma (2, 1): 0
scanner/all-tokens.oma (3, 1): "string"
scanner/all-tokens.oma (4, 1): {
scanner/all-tokens.oma (5, 1): }
scanner/all-tokens.oma (6, 1): (
scanner/all-tokens.oma (7, 1): )
scanner/all-tokens.oma (8, 1): .
scanner/all-tokens.oma (9, 1): ;
scanner/all-tokens.oma (10, 1): ,
scanner/all-tokens.oma (11, 1): <
scanner/all-tokens.oma (12, 1): >
scanner/all-tokens.oma (13, 1): <=
scanner/all-tokens.oma (14, 1): >=
scanner/all-tokens.oma (15, 1): ==
scanner/all-tokens.oma (16, 1): !=
scanner/all-tokens.oma (17, 1): +
scanner/all-tokens.oma (18, 1): -
scanner/all-tokens.oma (19, 1): *
scanner/all-tokens.oma (20, 1): !
scanner/all-tokens.oma (21, 1): &
scanner/all-tokens.oma (22, 1): &&
scanner/all-tokens.oma (23, 1): |
scanner/all-tokens.oma (24, 1): ||
scanner/all-tokens.oma (25, 1): ?
scanner/all-tokens.oma (26, 1): :
scanner/all-tokens.oma (27, 1): =
scanner/all-tokens.oma (28, 1): /
scanner/all-tokens.oma (29, 1): class
scanner/all-tokens.oma (30, 1): false
scanner/all-tokens.oma (31, 1): let
scanner/all-tokens.oma (32, 1): null
scanner/all-tokens.oma (33, 1): true
scanner/all-tokens.oma (34, 1): var
scanner/all-tokens.oma (37, 1): End of file
scanner/test.oma (4, 1): class
scanner/test.oma (4, 7): Program
scanner/test.oma (4, 15): {
scanner/test.oma (6, 3): main
scanner/test.oma (6, 7): (
scanner/test.oma (6, 8): )
scanner/test.oma (6, 10): {
scanner/test.oma (7, 3): }
scanner/test.oma (8, 1): }
scanner/test.oma (9, 2): End of file
errors/missing-hex-escape.oma (1, 4): Missing hex digit in hex escape sequence.
errors/number-too-large.oma (1, 1): Integer literal too large.
errors/unexpected-char.oma (1, 1): Unexpected character '@'.
errors/unrecognized-character-escape.oma (1, 3): Unrecognized character escape 'h'.
errors/unterminated-multi-line-comment.oma (1, 1): Unterminated multi-line comment.
errors/unterminated-string-literal.oma (1, 1): Unterminated string literal
